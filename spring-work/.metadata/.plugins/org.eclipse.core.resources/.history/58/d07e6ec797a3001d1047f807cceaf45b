package com.kr.board.controller;

import java.io.FileInputStream;
import java.io.OutputStream;
import java.util.List;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.util.FileCopyUtils;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.kr.board.entity.Board;
import com.kr.board.service.BoardService;

import lombok.RequiredArgsConstructor;

@Controller
@RequiredArgsConstructor
public class BoardController {
	
	@Autowired
	BoardService boardService;
	
	@Autowired
	ServletContext servletContext;
	
	@GetMapping("/")
	public ModelAndView boardList() {
		ModelAndView mav = new ModelAndView();
		
		try {
			List<Board> boards = boardService.getBoardAll();
			mav.addObject("boards",boards);
			mav.setViewName("boardlist");
		} catch(Exception e)
		{
			e.printStackTrace();
			mav.addObject("err","게시판 조회 에러 발생!");
			mav.setViewName("error");
		}
		return mav;
	}
	
	@GetMapping("/writeform")
	public String writeForm() {
		return "writeform";
	}
	
	@PostMapping("/boardwrite")
	public ModelAndView boardWrite(@ModelAttribute Board board,
			@RequestParam(name="file",required=false) MultipartFile file) {
		ModelAndView mav = new ModelAndView();
		
		try {
			boardService.writeBoard(board,file);
			mav.setViewName("redirect:/");
		} catch(Exception e) {
			e.printStackTrace();
			mav.addObject("err","게시판 작성 오류 발생!");
			mav.setViewName("error");
		}
		return mav;
	}
	
	@GetMapping("/detail/{num}")
	public ModelAndView boardDetail(@PathVariable Integer num) {
		ModelAndView mav = new ModelAndView();
		
		try {
			Board board = boardService.getBoard(num);
			mav.addObject("article",board);
			mav.setViewName("detailform");
			
		} catch(Exception e) {
			e.printStackTrace();
			mav.addObject("err","게시판 상세 조회 오류");
			mav.setViewName("error");
		}
		return mav;
	}
	
	
	@GetMapping("/image/{filename}")
	   public void imageView(@PathVariable String filename, HttpServletResponse response) {
	      try {
	         
	         String path = servletContext.getRealPath("/upload/");
	         FileInputStream fis = new FileInputStream(path+filename);
	         OutputStream out = response.getOutputStream();
	         FileCopyUtils.copy(fis, out);
	         fis.close();
	         out.close();
	      }catch (Exception e) {
	         e.printStackTrace();
	      }
	   }
	
	@GetMapping("/delete/{num}")
	public ModelAndView deleteBoard(@PathVariable Integer num) {
		ModelAndView mav = new ModelAndView();
		
		try {
			boardService.deleteBoard(num);
			mav.setViewName("redirect:/");
			
		} catch(Exception e) {
			e.printStackTrace();
			mav.addObject("err","삭제 에러");
			mav.setViewName("error");
		}
		return mav;
	}
	
	@PostMapping("/search")
	public ModelAndView search(@RequestParam("type") String type, @RequestParam("word") String word) {
		ModelAndView mav = new ModelAndView();
		try {
			List<Board> boards = boardService.searchBoard(type,word);
			mav.addObject("board",boards);
			mav.setViewName("redirect:/");
		} catch {
			
		}
	}
	
}
