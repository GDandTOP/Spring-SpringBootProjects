package com.kt.board.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import com.kt.board.dto.Board;
import com.kt.board.service.BoardService;

@Controller
public class BoardController {
	
	@Autowired
	BoardService boardService;
	
	@GetMapping("/")
	public ModelAndView boardList() {
		ModelAndView mav = new ModelAndView();
		try {
			List<Board> boards = boardService.getBoardList();
			if(boards.size()>0) {
				mav.addObject("boards", boards);
			}
			mav.setViewName("boardlist");
		} catch(Exception e) {
			e.printStackTrace();
			mav.addObject("err", "게시판 목록 조회 실패");
			mav.setViewName("error");
		}
		return mav;
	}
	
	@GetMapping("/writeform")
	public String writeform() {
		return "writeform";
	}
	
	@PostMapping("/boardwrite")
	public ModelAndView boardWrite(@ModelAttribute Board board, 
			@RequestParam(name="file",required=false) MultipartFile file) {
		ModelAndView mav = new ModelAndView();
		try {
			boardService.boardWrite(board, file);
			mav.setViewName("redirect:/");
		} catch(Exception e) {
			e.printStackTrace();
			mav.addObject("err", "게시판 글 등록 실패");
			mav.setViewName("error");
		}
		return mav;
	}
	
	@GetMapping("/detail")
	public ModelAndView detailEdit(@RequestParam("num") Integer num) {
		ModelAndView mav = new ModelAndView();
		try {
			Board board = boardService.getBoard(num);
			mav.addObject("article",board);
			mav.setViewName("detailform");
		} catch(Exception e) {
			e.printStackTrace();
			mav.addObject("err","상세 글 조회 실패");
			mav.setViewName("error");
		}
		return mav;
	}
	
	@PostMapping("/boardmodify")
	public ModelAndView detail(@RequestParam("num") Integer num,@RequestParam("subject") String subject,@RequestParam("content") String content) {
		ModelAndView mav = new ModelAndView();
		try {
			
			
			boardService.boardUpdate(num,subject,content);
			mav.setViewName("detailform");
		} catch(Exception e) {
			e.printStackTrace();
			mav.addObject("err","상세 글 조회 실패");
			mav.setViewName("error");
		}
		return mav;
	}
	
	@PostMapping("/search")
	public ModelAndView searchBoard(@RequestParam("type") String type, @RequestParam("search") String search) {
		ModelAndView mav = new ModelAndView();
		try {
			List<Board> boards = boardService.boardSearch(type,search);
			mav.addObject("boards",boards);
			mav.setViewName("boardlist";)
		} catch(Exception e) {
			mav.addObject("err", "게시판 검색 오류");
			mav.setViewName("error");
		}
	}
}
